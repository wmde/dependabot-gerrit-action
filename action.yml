name: Dependabot to Gerrit action
description: Pushes dependabot updates to gerrit

inputs:

  user:
    description: 'Gerrit bot user'
    required: true

  email:
    description: 'Gerrit bot email'
    required: true

  password:
    description: 'Gerrit bot password'
    required: true

  dry_run:
    description: 'Dont create anything'
    required: false

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2
      - name: Checkout
        shell: bash
        run: |
          REF=${{ github.event.pull_request.head.sha || github.sha }}
          git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=10 origin ${REF}
          git checkout --progress --force ${REF}

      - name: Setup git config
        shell: bash
        run: |
          git config user.name ${{ inputs.user }}
          git config user.email ${{ inputs.email }} 

      - name: Setup git remote
        shell: bash
        env:
          DEPENDABOT_GERRIT_PASSWORD: ${{ inputs.password }}
        run: |
          GITREVIEW_PROJECT=$(sed -n '/project=/ { s///; s/\.git//; p; }' .gitreview)
          GITREVIEW_HOST=$(sed -n '/host=/ s///p' .gitreview)
          # Make available in the abandon step as well, to avoid needing to recalculate
          echo "GITREVIEW_PROJECT=${GITREVIEW_PROJECT}" >> $GITHUB_ENV
          echo "GITREVIEW_HOST=${GITREVIEW_HOST}" >> $GITHUB_ENV

          # Create the authenticated remote for gerrit
          git remote add gerrit "https://addbot:${DEPENDABOT_GERRIT_PASSWORD}@${GITREVIEW_HOST}/r/a/${GITREVIEW_PROJECT}"


      # Generate the "randomness" for the change id from the branch name
      # This means that multiple alterations to the PR will submit to the same Gerrit change
      # This will result in the exact same update having the same Change-Id across multiple Gerrit repos
      - name: Alter commit
        shell: bash
        run: |
          random=$( echo ${{github.head_ref || github.sha }} | git hash-object --stdin)
          # Make available in the abandon step as well, to avoid needing to recalculate
          echo "GITREVIEW_RANDOM_CHANGEID=${random}" >> $GITHUB_ENV

          GITHUB_EVENT=${{github.event.number}}

          # Alter the commit message
          MSG_OLD=$(git log --format=%B -n1)

          # Check if we have event
          if [ -n "${GITHUB_EVENT}" ]; then
            MSG_PRE=$([[ "${{ github.event.action }}" == "closed" ]] && echo "Closed: " || true)
            MSG_GH_PR="Pull Request: https://github.com/${{github.repository}}/pull/${{ github.event.number }}"
          else
            MSG_PRE=""
            MSG_GH_PR=""
          fi

          MSG_CHANGE_ID="Change-Id: I${random}"
          MSG_NEW=$(printf "$MSG_PRE$MSG_OLD\n$MSG_GH_PR\n$MSG_CHANGE_ID")
          git commit --amend -m"$MSG_NEW"

          # Also reset the author, per our git config
          git commit --amend --no-edit --reset-author

          # And output the final message
          git log -n1

          ID_LINK=I${random}
          echo "::warning::https://gerrit.wikimedia.org/r/q/$ID_LINK"

      - name: Submit to Gerrit
        shell: bash
        run: |
          COMMAND="git push gerrit HEAD:refs/for/${{ github.event.pull_request.base.ref }}%${{format('ready,m=Triggered_from_a_{1}_event_on_Github,hashtag=dependabot,hashtag={0}', join( github.event.pull_request.labels.*.name, ',hashtag='), github.event.action)}}"
          $([[ "${{inputs.dry_run}}" == "true" ]] || $COMMAND)

      - name: Abandon closed patch
        if: ${{ github.event.action == 'closed' }}
        shell: bash
        run: |
          PATCH_SET=$(ssh gerrit.wikimedia.org gerrit query --format=json "is:open change:$GITREVIEW_RANDOM_CHANGEID" | jq '.number | select(.)' | sed 's/$/,1/' | tr '\n' ' ')
          if [ -z "$PATCH_SET" ]
          then
                COMMAND="echo PatchSet is already closed or non-existing."
          else
                COMMAND="ssh gerrit.wikimedia.org gerrit review --abandon $PATCH_SET"
          fi
          $([[ "${{inputs.dry_run}}" == "true" ]] || $COMMAND)


